create type "public"."experience_category" as enum ('unknown', 'work', 'studies', 'home', 'love');

create type "public"."project_call_to_action_style" as enum ('primary', 'secondary', 'tertiary');

create type "public"."project_call_to_action_type" as enum ('route', 'link');

create type "public"."project_tag_style" as enum ('fill', 'outline', 'naked');

create table "public"."experiences" (
    "id" bigint generated by default as identity not null,
    "title" text not null default ''::text,
    "location" text not null default ''::text,
    "content" text not null default ''::text,
    "category" experience_category not null,
    "start_date" date,
    "end_date" date
);


alter table "public"."experiences" enable row level security;

create table "public"."project_call_to_actions" (
    "id" bigint generated by default as identity not null,
    "label" text not null,
    "type" project_call_to_action_type not null,
    "action" text not null,
    "style" project_call_to_action_style not null
);


alter table "public"."project_call_to_actions" enable row level security;

create table "public"."project_call_to_actions_for_project" (
    "project_id" bigint not null,
    "project_call_to_action_id" bigint not null
);


alter table "public"."project_call_to_actions_for_project" enable row level security;

create table "public"."project_tags" (
    "id" bigint generated by default as identity not null,
    "label" text not null,
    "label_color" text not null,
    "color" text not null,
    "style" project_tag_style not null
);


alter table "public"."project_tags" enable row level security;

create table "public"."project_tags_for_project" (
    "project_id" bigint not null,
    "project_tag_id" bigint not null
);


alter table "public"."project_tags_for_project" enable row level security;

create table "public"."projects" (
    "id" bigint generated by default as identity not null,
    "title" text not null,
    "summary" text not null,
    "detail" text not null,
    "cover_img_url" text not null
);


alter table "public"."projects" enable row level security;

CREATE UNIQUE INDEX experiences_pkey ON public.experiences USING btree (id);

CREATE UNIQUE INDEX project_call_to_actions_for_p_project_id_project_call_to_ac_key ON public.project_call_to_actions_for_project USING btree (project_id, project_call_to_action_id);

CREATE UNIQUE INDEX project_call_to_actions_pkey ON public.project_call_to_actions USING btree (id);

CREATE UNIQUE INDEX project_tags_for_project_project_id_project_tag_id_key ON public.project_tags_for_project USING btree (project_id, project_tag_id);

CREATE UNIQUE INDEX project_tags_pkey ON public.project_tags USING btree (id);

CREATE UNIQUE INDEX projects_pkey ON public.projects USING btree (id);

alter table "public"."experiences" add constraint "experiences_pkey" PRIMARY KEY using index "experiences_pkey";

alter table "public"."project_call_to_actions" add constraint "project_call_to_actions_pkey" PRIMARY KEY using index "project_call_to_actions_pkey";

alter table "public"."project_tags" add constraint "project_tags_pkey" PRIMARY KEY using index "project_tags_pkey";

alter table "public"."projects" add constraint "projects_pkey" PRIMARY KEY using index "projects_pkey";

alter table "public"."project_call_to_actions_for_project" add constraint "fk_project_call_to_action_id" FOREIGN KEY (project_call_to_action_id) REFERENCES project_call_to_actions(id) not valid;

alter table "public"."project_call_to_actions_for_project" validate constraint "fk_project_call_to_action_id";

alter table "public"."project_call_to_actions_for_project" add constraint "fk_project_id" FOREIGN KEY (project_id) REFERENCES projects(id) not valid;

alter table "public"."project_call_to_actions_for_project" validate constraint "fk_project_id";

alter table "public"."project_call_to_actions_for_project" add constraint "project_call_to_actions_for_p_project_id_project_call_to_ac_key" UNIQUE using index "project_call_to_actions_for_p_project_id_project_call_to_ac_key";

alter table "public"."project_tags_for_project" add constraint "fk_project_id" FOREIGN KEY (project_id) REFERENCES projects(id) not valid;

alter table "public"."project_tags_for_project" validate constraint "fk_project_id";

alter table "public"."project_tags_for_project" add constraint "fk_project_tag_id" FOREIGN KEY (project_tag_id) REFERENCES project_tags(id) not valid;

alter table "public"."project_tags_for_project" validate constraint "fk_project_tag_id";

alter table "public"."project_tags_for_project" add constraint "project_tags_for_project_project_id_project_tag_id_key" UNIQUE using index "project_tags_for_project_project_id_project_tag_id_key";

create policy "Enable read access for all users"
on "public"."experiences"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."project_call_to_actions"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."project_call_to_actions_for_project"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."project_tags"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."project_tags_for_project"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."projects"
as permissive
for select
to public
using (true);



