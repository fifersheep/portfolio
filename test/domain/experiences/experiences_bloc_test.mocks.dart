// Mocks generated by Mockito 5.0.5 from annotations
// in portfolio/test/domain/experiences/experiences_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:portfolio/domain/core/error/failures.dart' as _i5;
import 'package:portfolio/domain/core/formatter/date_formatter.dart' as _i7;
import 'package:portfolio/domain/core/formatter/new_line_formatter.dart' as _i8;
import 'package:portfolio/domain/experiences/entities/experience.dart' as _i6;
import 'package:portfolio/domain/experiences/experiences_repository.dart' as _i3;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

class _FakeEither<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [ExperiencesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockExperiencesRepository extends _i1.Mock implements _i3.ExperiencesRepository {
  MockExperiencesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Experience>>> getExperiences() =>
      (super.noSuchMethod(Invocation.method(#getExperiences, []),
              returnValue: Future<_i2.Either<_i5.Failure, List<_i6.Experience>>>.value(
                  _FakeEither<_i5.Failure, List<_i6.Experience>>()))
          as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Experience>>>);
}

/// A class which mocks [DateFormatter].
///
/// See the documentation for Mockito's code generation for more information.
class MockDateFormatter extends _i1.Mock implements _i7.DateFormatter {
  MockDateFormatter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String monthYearRange(DateTime? start, DateTime? end) =>
      (super.noSuchMethod(Invocation.method(#monthYearRange, [start, end]), returnValue: '') as String);
  @override
  String monthYear(DateTime? date) =>
      (super.noSuchMethod(Invocation.method(#monthYear, [date]), returnValue: '') as String);
}

/// A class which mocks [NewLineFormatter].
///
/// See the documentation for Mockito's code generation for more information.
class MockNewLineFormatter extends _i1.Mock implements _i8.NewLineFormatter {
  MockNewLineFormatter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String format(String? input) => (super.noSuchMethod(Invocation.method(#format, [input]), returnValue: '') as String);
}
