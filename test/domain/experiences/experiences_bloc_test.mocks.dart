// Mocks generated by Mockito 5.4.2 from annotations
// in portfolio/test/domain/experiences/experiences_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:portfolio/data/network/response.dart' as _i2;
import 'package:portfolio/domain/core/formatter/date_formatter.dart' as _i6;
import 'package:portfolio/domain/core/formatter/new_line_formatter.dart' as _i7;
import 'package:portfolio/domain/experiences/entities/experience.dart' as _i5;
import 'package:portfolio/domain/experiences/experiences_repository.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0<T> extends _i1.SmartFake implements _i2.Response<T> {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ExperiencesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockExperiencesRepository extends _i1.Mock implements _i3.ExperiencesRepository {
  MockExperiencesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Response<List<_i5.Experience>>> getExperiences() => (super.noSuchMethod(
        Invocation.method(
          #getExperiences,
          [],
        ),
        returnValue: _i4.Future<_i2.Response<List<_i5.Experience>>>.value(_FakeResponse_0<List<_i5.Experience>>(
          this,
          Invocation.method(
            #getExperiences,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Response<List<_i5.Experience>>>);
}

/// A class which mocks [DateFormatter].
///
/// See the documentation for Mockito's code generation for more information.
class MockDateFormatter extends _i1.Mock implements _i6.DateFormatter {
  MockDateFormatter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String monthYearRange(
    DateTime? start,
    DateTime? end,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #monthYearRange,
          [
            start,
            end,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  String monthYear(DateTime? date) => (super.noSuchMethod(
        Invocation.method(
          #monthYear,
          [date],
        ),
        returnValue: '',
      ) as String);
}

/// A class which mocks [NewLineFormatter].
///
/// See the documentation for Mockito's code generation for more information.
class MockNewLineFormatter extends _i1.Mock implements _i7.NewLineFormatter {
  MockNewLineFormatter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String format(String? input) => (super.noSuchMethod(
        Invocation.method(
          #format,
          [input],
        ),
        returnValue: '',
      ) as String);
}
