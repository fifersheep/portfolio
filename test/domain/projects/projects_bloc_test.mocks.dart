// Mocks generated by Mockito 5.0.3 from annotations
// in portfolio/test/domain/projects/projects_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:portfolio/domain/core/error/failures.dart' as _i5;
import 'package:portfolio/domain/projects/entities/project.dart' as _i6;
import 'package:portfolio/domain/projects/projects_repository.dart' as _i3;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

class _FakeEither<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [ProjectsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProjectsRepository extends _i1.Mock implements _i3.ProjectsRepository {
  MockProjectsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Project>>> getProjects() =>
      (super.noSuchMethod(Invocation.method(#getProjects, []),
              returnValue: Future.value(_FakeEither<_i5.Failure, List<_i6.Project>>()))
          as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Project>>>);
}
